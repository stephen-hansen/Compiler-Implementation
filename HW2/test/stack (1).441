# This code pushes a few values on a stack, then pops and prints in reverse order
# So this should print 9, then 5, then 3, then 1, then 0 (which is the default the stack returns when popping an empty stack)
# Global value numbering on the main routine should remove a lot of pointer tag checks, and consequently result in fewer basic blocks for main.
# If you have implemented value numbering for field map and vtbl lookups, most of those will also be removed.
# A smaller number of tag checks will be removed from the code of the stack methods.

class ListNode [
    fields val, next
    method getNext() with locals:
        return &this.next
    method getVal() with locals:
        return &this.val
]
class Stack [
    fields list
    method push(v) with locals tmp:
        tmp = @ListNode
	!tmp.val = v
	!tmp.next = &this.list
	!this.list = tmp
	return 0
    method pop() with locals tmp:
        if (&this.list == 0): {
            return 0
        } else {
            tmp = ^this.getVal()
            !this.list = ^this.getNext()
            return tmp
        }
]

main with stk:
    stk = @Stack
    !stk.list = 0
    stk.push(1)
    stk.push(3)
    stk.push(5)
    stk.push(9)
    print(^stk.pop())
    print(^stk.pop())
    print(^stk.pop())
    print(^stk.pop())
    print(^stk.pop())
