class LISTNODE [
   fields val:int, next:LISTNODE, isnull:int
   method getNext() returning LISTNODE with locals:
      return &this.next
   method getVal() returning int with locals:
      return &this.val
   method isNull() returning int with locals:
      return &this.isnull
]
class STACK [
   fields list:LISTNODE
   method init() returning STACK with locals stk:STACK, node:LISTNODE:
      stk = @STACK
      node = @LISTNODE
      !node.isnull = 1
      !stk.list = node
      return stk
   method push(v:int) returning int with locals tmp:LISTNODE:
      tmp = @LISTNODE
      !tmp.isnull = 0
      !tmp.val = v
      !tmp.next = &this.list
      !this.list = tmp
      return 0
   method empty() returning int with locals:
      return ^&this.list.isNull()
   method pop() returning int with locals tmp:int:
      if ^&this.list.isNull(): {
         return 0 
      } else {
         tmp = ^&this.list.getVal()
         !this.list = ^&this.list.getNext()
         return tmp
      }
]

main with stk:STACK, i:int:
   stk = ^@STACK.init()
   i = 50
   while i: {
      _ = ^stk.push(i)
      print(^stk.pop())
      i = (i - 1)
   }

